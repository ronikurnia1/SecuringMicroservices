

1. On GloboTicket.Services.Discount project
   - Modify Startup.cs file by adding the following code inside ConfigureServices method:

            var requireAuthenticatedUserPolicy = new AuthorizationPolicyBuilder()
                .RequireAuthenticatedUser()
                .Build();

            services.AddControllers(configure =>
            {
                configure.Filters.Add(new AuthorizeFilter(
                    requireAuthenticatedUserPolicy));
            });

            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
              .AddJwtBearer(options =>
              {
                  options.Authority = "https://localhost:5010";
                  options.Audience = "discount";
              });


   - Modify Startup.cs file by adding the following code inside Configure method:

               app.UseAuthentication();



2. On GloboTicket.Services.Identity project

   - Modify Config.cs file by adding ApiScope as follow:

                new ApiScope("discount.fullaccess")

   - Modify Config.cs file by adding ApiResource as follow:

                new ApiResource("discount", "Discount API")
                {
                    Scopes = { "discount.fullaccess" }
                }


   - Modify Config.cs file by adding new Client as follow:

                new Client
                {
                    ClientId = "shoppingbaskettodownstreamtokenexchangeclient",
                    ClientName = "Shopping Basket Token Exchange Client",
                    AllowedGrantTypes = new[] { "urn:ietf:params:oauth:grant-type:token-exchange" },
                    ClientSecrets = { new Secret("0cdea0bc-779e-4368-b46b-09956f70712c".Sha256()) },
                    AllowedScopes = {
                         "openid", "profile", "discount.fullaccess" }
                },


3. Put a breakpoint at line 19 of DiscountService class (inside Services folder) on GloboTicket.Services.ShoppingBasket project
4. Run the solution and test to checkout and see if the breakpoint being hit with an error 401

5. On GloboTicket.Services.ShoppingBasket project
   - Add package IdentityModel

   - Replace DiscountService.cs file with the following code:

        using GloboTicket.Services.ShoppingBasket.Extensions;
        using GloboTicket.Services.ShoppingBasket.Models;
        using IdentityModel.Client;
        using Microsoft.AspNetCore.Authentication;
        using Microsoft.AspNetCore.Http;
        using System;
        using System.Collections.Generic;
        using System.Net.Http;
        using System.Threading.Tasks;

        namespace GloboTicket.Services.ShoppingBasket.Services
        {
            public class DiscountService: IDiscountService
            {
                private readonly HttpClient client;
                private readonly IHttpContextAccessor httpContextAccessor;
                private string _accessToken;

                public DiscountService(HttpClient client, IHttpContextAccessor httpContextAccessor)
                {
                    this.client = client;
                    this.httpContextAccessor = httpContextAccessor;
                }

                private async Task<string> GetToken()
                {
                    if (!string.IsNullOrWhiteSpace(_accessToken))
                    {
                        return _accessToken;
                    }

                    var discoveryDocumentResponse = await client
                        .GetDiscoveryDocumentAsync("https://localhost:5010/");
                    if (discoveryDocumentResponse.IsError)
                    {
                        throw new Exception(discoveryDocumentResponse.Error);
                    }

                    var customParams = new Parameters(new List<KeyValuePair<string, string>> {
                        new KeyValuePair<string, string>("subject_token_type", "urn:ietf:params:oauth:token-type:access_token"),
                        new KeyValuePair<string, string>("subject_token", await httpContextAccessor.HttpContext.GetTokenAsync("access_token")),
                        new KeyValuePair<string, string>("scope", "openid profile discount.fullaccess") });

                    var tokenResponse = await client.RequestTokenAsync(new TokenRequest()
                    {
                        Address = discoveryDocumentResponse.TokenEndpoint,
                        GrantType = "urn:ietf:params:oauth:grant-type:token-exchange",
                        Parameters = customParams,
                        ClientId = "shoppingbaskettodownstreamtokenexchangeclient",
                        ClientSecret = "0cdea0bc-779e-4368-b46b-09956f70712c"
                    });

                    if (tokenResponse.IsError)
                    {
                        throw new Exception(tokenResponse.Error);
                    }

                    _accessToken = tokenResponse.AccessToken;
                    return _accessToken;
                }

                public async Task<Coupon> GetCoupon(Guid userId)
                {
                    client.SetBearerToken(await GetToken());
                    var response = await client.GetAsync($"/api/discount/user/{userId}");
                    if (!response.IsSuccessStatusCode)
                    {
                        return null;
                    }
                    return await response.ReadContentAs<Coupon>();
                }
            }
        }


   - On Startup.cs file add the following code inside ConfigureService method:

               services.AddHttpContextAccessor();

6. Put couple breakpoints in DiscountService class (inside Services folder) on GloboTicket.Services.ShoppingBasket project
   to see the token exchange result

7. Run the solution and test to checkout and see if the breakpoint being hit and inspect the exchange token result
